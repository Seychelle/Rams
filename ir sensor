/*
  ReadAnalogVoltage

  Reads an analog input on pin 0, converts it to voltage, and prints the result to the Serial Monitor.
  Graphical representation is available using Serial Plotter (Tools > Serial Plotter menu).
  Attach the center pin of a potentiometer to pin A0, and the outside pins to +5V and ground.

  This example code is in the public domain.

  http://www.arduino.cc/en/Tutorial/ReadAnalogVoltage
*/
#include "Filter.h"
 
// the <float> makes a filter for float numbers
// 20 is the weight (20 => 20%)
// 0 is the initial value of the filter

ExponentialFilter<float> FilteredTemperature(20, 0); 
float tempFinalG;

// the setup routine runs once when you press reset:
void setup() {
  // initialize serial communication at 9600 bits per second:
  Serial.begin(9600);
}

// the loop routine runs over and over again forever:
void loop() {
  // read the input on analog pin 0:
  float sensorValue = analogRead(A0);
  // Convert the analog reading (which goes from 0 - 1023) to a voltage (0 - 5V):
  float voltage = (sensorValue * (5.0 / 1024.0)); //     / 300.4596;

if(voltage != 0 && voltage < 4.9){  
  voltage = (voltage/300)*1000;
  Serial.println(voltage, 6);
  


  float oneOverThree = (float)1 /(float)3; // This is to avoid integer division
  float p0 = pow(((3.8462 * voltage) + 28.5228), 2)+ 342.9034;
  //Serial.println("p0: ");
  //Serial.println(p0);
  float p1 = pow(p0, 0.5);
  //Serial.println("p1: ");
  //Serial.println(p1);
  float p2 = p1 + (3.8462*voltage) + 28.5228;
  //Serial.println("p2: ");
  //Serial.println(p2);
  float temp1 = pow(p2, oneOverThree);
  //Serial.println("temp1: ");
  //Serial.println(temp1);

  
  float temp2 = p1 * (-1);
  float p3 = temp2 + (3.8462*voltage) + 28.5228;
  bool neg = false;
  if(p3 < 0){
    p3 = -p3;
    neg = true;
  }
  float p4 =  pow(p3, oneOverThree);
  if(neg = true)
    p4 = -p4;
  //Serial.println("p4: ");
  //Serial.println(p4);
  
  tempFinalG = ((33 *temp1) + (33*p4)) - 47.8462;
  Serial.println("tempFinalG: ");
  Serial.println(tempFinalG);
  delay(1000);
  
  
  
  FilteredTemperature.Filter(tempFinalG);
  float SmoothTemperature = FilteredTemperature.Current();
  
  Serial.println("Smooth Temp: ");
  Serial.println(SmoothTemperature);

  
  }
}
